#!/usr/bin/env python3
"""
ูุฑุงูุจ ุจุณูุท ูุณูุฑ ุงูุนูู - ูุนูู ุจุงุณุชูุฑุงุฑ ููุชุฃูุฏ ูู ุงุณุชูุฑุงุฑ ุนูู ุงูุชุทุจูู ูุงูุจูุช
ุชุตููู ุจุณูุท ููุจุงุดุฑ ูุถูุงู ุงูุซุจุงุช
"""

import os
import time
import subprocess
import requests
import logging
from datetime import datetime

# ุฅุนุฏุงุฏ ุงูุชุณุฌูู
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler("monitor.log")
    ]
)

def check_web_server():
    """ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุฎุงุฏู ุงูููุจ Flask ูุนูู"""
    try:
        # ุงูุชุญูู ุฃููุงู ูู API ping
        try:
            response = requests.get("http://localhost:5000/api/ping", timeout=3)
            if response.status_code == 200:
                logging.info("โ ุฎุงุฏู ุงูููุจ ูุนูู (ููุทุฉ ุงูููุงูุฉ ping ุชุณุชุฌูุจ)")
                return True
        except Exception:
            pass
        
        # ุงูุชุญูู ูู ูุฌูุฏ ุนูููุฉ gunicorn
        result = subprocess.run("ps aux | grep -v grep | grep -E 'gunicorn'", 
                               shell=True, capture_output=True, text=True)
        if "gunicorn" in result.stdout:
            logging.info("โ ุฎุงุฏู ุงูููุจ ูุนูู (ุนูููุฉ gunicorn ููุฌูุฏุฉ)")
            return True
            
        logging.warning("โ ุฎุงุฏู ุงูููุจ ูุชููู")
        return False
    except Exception as e:
        logging.error(f"ุฎุทุฃ ุฃุซูุงุก ุงูุชุญูู ูู ุฎุงุฏู ุงูููุจ: {e}")
        return False

def check_telegram_bot():
    """ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุจูุช ุชูููุฌุฑุงู ูุนูู"""
    try:
        # ุงูุชุญูู ูู ูุฌูุฏ ุนูููุฉ ุจูุช ุชูููุฌุฑุงู
        result = subprocess.run("ps aux | grep -v grep | grep 'python' | grep 'bot.py'", 
                               shell=True, capture_output=True, text=True)
        if result.stdout.strip():
            logging.info("โ ุจูุช ุชูููุฌุฑุงู ูุนูู")
            return True
            
        logging.warning("โ ุจูุช ุชูููุฌุฑุงู ูุชููู")
        return False
    except Exception as e:
        logging.error(f"ุฎุทุฃ ุฃุซูุงุก ุงูุชุญูู ูู ุจูุช ุชูููุฌุฑุงู: {e}")
        return False

def restart_web_server():
    """ุฅุนุงุฏุฉ ุชุดุบูู ุฎุงุฏู ุงูููุจ Flask"""
    try:
        logging.info("๐ ูุญุงููุฉ ุฅุนุงุฏุฉ ุชุดุบูู ุฎุงุฏู ุงูููุจ...")
        
        # ุฅููุงู ุฃู ูุณุฎุฉ ูุงุฆูุฉ
        subprocess.run("pkill -f 'gunicorn'", shell=True)
        time.sleep(2)
        
        # ุจุฏุก ุชุดุบูู ุฌุฏูุฏ
        subprocess.Popen(
            "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app",
            shell=True, 
            stdout=open("web_server_stdout.log", "a"),
            stderr=open("web_server_stderr.log", "a")
        )
        
        # ุงูุชุธุงุฑ ููุชุฃูุฏ ูู ุจุฏุก ุงูุชุดุบูู
        time.sleep(5)
        
        # ุงูุชุญูู ูู ูุฌุงุญ ุฅุนุงุฏุฉ ุงูุชุดุบูู
        if check_web_server():
            logging.info("โ ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุฎุงุฏู ุงูููุจ ุจูุฌุงุญ")
            return True
        else:
            logging.error("โ ูุดู ูู ุฅุนุงุฏุฉ ุชุดุบูู ุฎุงุฏู ุงูููุจ")
            return False
    except Exception as e:
        logging.error(f"ุฎุทุฃ ุฃุซูุงุก ุฅุนุงุฏุฉ ุชุดุบูู ุฎุงุฏู ุงูููุจ: {e}")
        return False

def restart_telegram_bot():
    """ุฅุนุงุฏุฉ ุชุดุบูู ุจูุช ุชูููุฌุฑุงู"""
    try:
        logging.info("๐ ูุญุงููุฉ ุฅุนุงุฏุฉ ุชุดุบูู ุจูุช ุชูููุฌุฑุงู...")
        
        # ุฅููุงู ุฃู ูุณุฎุฉ ูุงุฆูุฉ
        subprocess.run("pkill -f 'python.*bot.py'", shell=True)
        time.sleep(2)
        
        # ุจุฏุก ุชุดุบูู ุฌุฏูุฏ
        subprocess.Popen(
            "python bot.py", 
            shell=True, 
            stdout=open("bot_stdout.log", "a"),
            stderr=open("bot_stderr.log", "a")
        )
        
        # ุงูุชุธุงุฑ ููุชุฃูุฏ ูู ุจุฏุก ุงูุชุดุบูู
        time.sleep(5)
        
        # ุงูุชุญูู ูู ูุฌุงุญ ุฅุนุงุฏุฉ ุงูุชุดุบูู
        if check_telegram_bot():
            logging.info("โ ุชู ุฅุนุงุฏุฉ ุชุดุบูู ุจูุช ุชูููุฌุฑุงู ุจูุฌุงุญ")
            return True
        else:
            logging.error("โ ูุดู ูู ุฅุนุงุฏุฉ ุชุดุบูู ุจูุช ุชูููุฌุฑุงู")
            return False
    except Exception as e:
        logging.error(f"ุฎุทุฃ ุฃุซูุงุก ุฅุนุงุฏุฉ ุชุดุบูู ุจูุช ุชูููุฌุฑุงู: {e}")
        return False

def main():
    """ุงููุธููุฉ ุงูุฑุฆูุณูุฉ ูููุฑุงูุจ"""
    logging.info("๐ ุจุฏุก ุชุดุบูู ูุฑุงูุจ ุณูุฑ ุงูุนูู ุงูุจุณูุท...")
    
    # ุทุจุงุนุฉ ูุนูููุงุช ุงูุจูุฆุฉ
    logging.info(f"๐ ุงูุฏููู ุงูุญุงูู: {os.getcwd()}")
    
    # ุฅูุดุงุก ููู PID
    with open("simple_monitor.pid", "w") as f:
        f.write(str(os.getpid()))
    logging.info(f"๐ ุชู ูุชุงุจุฉ PID {os.getpid()} ุฅูู simple_monitor.pid")
    
    check_interval = 30  # ูุญุต ูู 30 ุซุงููุฉ
    
    try:
        run_count = 0
        while True:
            run_count += 1
            logging.info(f"๐ ุฏูุฑุฉ ูุญุต #{run_count} - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            
            # ุงูุชุญูู ูู ุฎุงุฏู ุงูููุจ
            if not check_web_server():
                restart_web_server()
            
            # ุงูุชุญูู ูู ุจูุช ุชูููุฌุฑุงู
            if not check_telegram_bot():
                restart_telegram_bot()
            
            # ุงูุชุธุงุฑ ูุจู ุงููุญุต ุงูุชุงูู
            logging.info(f"โฑ๏ธ ุงูุชุธุงุฑ {check_interval} ุซุงููุฉ ุญุชู ุงููุญุต ุงูุชุงูู...")
            time.sleep(check_interval)
    except KeyboardInterrupt:
        logging.info("๐ ุชู ุฅููุงู ุงููุฑุงูุจ ุจูุงุณุทุฉ ุงููุณุชุฎุฏู")
    except Exception as e:
        logging.error(f"โ ุญุฏุซ ุฎุทุฃ ุนุงู ูู ุงููุฑุงูุจ: {e}")
    finally:
        # ุชูุธูู ููู PID ุนูุฏ ุงูุฎุฑูุฌ
        if os.path.exists("simple_monitor.pid"):
            os.remove("simple_monitor.pid")
            logging.info("๐งน ุชู ุชูุธูู ููู PID")

if __name__ == "__main__":
    main()